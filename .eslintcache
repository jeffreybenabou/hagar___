[{"/Users/elector/hagar-portfolio/src/reportWebVitals.js":"1","/Users/elector/hagar-portfolio/src/App.js":"2","/Users/elector/hagar-portfolio/src/index.js":"3"},{"size":362,"mtime":1607680152604,"results":"4","hashOfConfig":"5"},{"size":12133,"mtime":1608407159765,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1607680152603,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dfohp",{"filePath":"10","messages":"11","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elector/hagar-portfolio/src/reportWebVitals.js",[],"/Users/elector/hagar-portfolio/src/App.js",["15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35"],"import React, {useState} from \"react\";\nimport Zoom from 'react-medium-image-zoom'\nimport 'react-medium-image-zoom/dist/styles.css'\nimport {TransformWrapper, TransformComponent} from \"react-zoom-pan-pinch\";\n\nimport contact from './res/images/contact.png'\nimport about from './res/images/about.png'\nimport message from './res/images/message.png'\nimport drawer from './res/images/drawer.png'\nimport portofolio from \"./res/images/portofolio.png\"\nimport downArrow from \"./res/images/arrow.png\"\nimport background from './res/images/background.png'\nimport uiux1 from './res/images/uiux/1.jpg'\nimport uiux11 from './res/images/uiux/3.jpg'\nimport uiux2 from './res/images/uiux/2.jpg'\nimport uiux4 from './res/images/uiux/4.jpg'\nimport uiux5 from './res/images/uiux/5.jpg'\nimport uiux6 from './res/images/uiux/6.jpg'\nimport uiux61 from './res/images/uiux/61.jpg'\nimport uiux7 from './res/images/uiux/7.jpg'\nimport uiux71 from './res/images/uiux/71.jpg'\nimport uiux8 from './res/images/uiux/8.jpg'\nimport uiux81 from './res/images/uiux/81.jpg'\nimport uiux9 from './res/images/uiux/9.jpg'\nimport uiux91 from './res/images/uiux/91.jpg'\nimport uiux10 from './res/images/uiux/10.jpg'\nimport uiux101 from './res/images/uiux/101.jpg'\nimport uiux111 from './res/images/uiux/11.jpg'\nimport uiux112 from './res/images/uiux/111.jpg'\nimport uiux122 from './res/images/uiux/122.jpg'\nimport logo1 from './res/images/logo/logo1.jpg'\nimport logo2 from './res/images/logo/logo2.jpg'\nimport logo3 from './res/images/logo/logo3.jpg'\nimport logo4 from './res/images/logo/logo4.jpg'\nimport logo5 from './res/images/logo/logo5.jpg'\nimport logo6 from './res/images/logo/logo6.jpg'\n\nimport print1 from './res/images/print/1.jpg'\nimport print2 from './res/images/print/2.jpg'\nimport print3 from './res/images/print/3.jpg'\nimport secondCategory from './res/images/secondCategory.png'\nimport thirdCategory from './res/images/thirdCategory.png'\nimport firstCategory from './res/images/firstCategory.png'\nimport \"./res/css/popup.css\"\nimport './res/css/upper_div.css'\nimport './res/css/drawer.css'\nimport './res/css/categories.css'\nimport './res/css/works.css'\n\nimport Popup from 'reactjs-popup';\n\nconst App = (props) => {\n    const [UIUX, setUIUX] = useState([\n        {\n            title: 'test',\n            img: uiux1,\n            mockUp: uiux11\n        },\n        {\n            title: 'test',\n            img: uiux2\n        },\n\n        {\n            title: '',\n            img: uiux4,\n            mockUp: uiux5\n        },\n        {\n            title: '',\n            img: uiux6,\n            mockUp: uiux61\n        },\n        {\n            title: '',\n            img: uiux7,\n            mockUp: uiux71\n        },\n        {\n            title: '',\n            img: uiux122,\n            mockUp: uiux122\n        },\n        {\n            title: '',\n            img: uiux8,\n            mockUp: uiux81\n        },\n        {\n            title: '',\n            img: uiux9,\n            mockUp: uiux91\n        },\n        {\n            title: '',\n            img: uiux10,\n            mockUp: uiux101\n        },\n\n        {\n            title: '',\n            img: uiux111,\n            mockUp: uiux112\n        },\n    ]);\n    const [print, setPrint] = useState([\n        {\n            title: 'test',\n            img: print1,\n            mockUp: print1\n        },\n        {\n            title: '',\n            img: print2,\n            mockUp: print2\n        },\n        {\n            title: '',\n            img: print3,\n            mockUp: print3\n        },\n\n    ]);\n    const [logo, setLogo] = useState([\n        {\n            title: '',\n            img: logo1,\n            mockUp: logo1\n        },\n        {\n            title: '',\n            img: logo2,\n            mockUp: logo2\n        },\n        {\n            title: 'test',\n            img: logo3,\n            mockUp: logo3\n        },\n        {\n            title: 'test',\n            img: logo4,\n            mockUp: logo4\n        },\n        {\n            title: 'test',\n            img: logo5,\n            mockUp: logo5\n        },\n        {\n            title: '',\n            img: logo6,\n            mockUp: logo6\n        },\n    ]);\n    const [all, setAll] = useState(() => {\n        const data = [];\n        UIUX.map((item) => {\n            data.push(item)\n        })\n        print.map((item) => {\n            data.push(item)\n        })\n        logo.map((item) => {\n            data.push(item)\n        })\n        return data\n    });\n    const [currentArray, setCurrentArray] = useState(all);\n    const [currentCategory, setCurrentCategory] = useState(0);\n    const DrawerButton = (props) => {\n\n        return <button\n            id={props.id}\n            onClick={props.onClick}\n            style={props.style}\n            className={\"drawer_button_div\"}>\n            {\n                props.showText &&\n                <div style={{marginRight: \"0.5rem\"}}>\n                    {props.textToShow}\n                </div>\n            }\n            <img id={props.imageId} className={\"drawer_button_image\"} src={props.image}>\n\n            </img>\n\n\n        </button>\n    }\n    const Drawer = () => {\n\n        return  <div\n            id={\"drawer\"}\n            style={{\n                \"--width\": showText ? \"50%\" : 0,\n                \"--boxShadow\": showText ? \"5px 5px 1rem 0rem #d7d7d7\" : undefined,\n                \"--backgroundColor\": showText ? \"#f5f1ea\" : 'transparent'\n            }}>\n\n            <DrawerButton\n                id={\"main_drawer_button_div\"}\n                style={{\"--visibility\": showText ? \"visible\" : 'hidden'}}\n                imageId={\"main_drawer_button_image\"}\n                onClick={() => {\n                    setShowText(!showText);\n                }}\n                image={drawer}\n            />\n            <DrawerButton\n                style={{\"--visibility\": showText ? \"visible\" : 'hidden'}}\n                textToShow={\"אודות\"}\n                showText={showText}\n                image={about}\n            />\n            <DrawerButton\n                style={{\"--visibility\": showText ? \"visible\" : 'hidden'}}\n                textToShow={\"צור קשר\"}\n                showText={showText}\n                image={message}\n            />\n            <DrawerButton\n                style={{\"--visibility\": showText ? \"visible\" : 'hidden'}}\n                textToShow={\"חייגו אליי\"}\n                showText={showText}\n                image={contact}\n            />\n        </div>\n    }\n\n    const CategoryButton = (props) => {\n\n        return <button\n            onClick={props.onClick}\n            className={\"category_button\"}>\n            <div\n                style={{\n                    color: currentCategory == props.index?\"white\":\"#4b5556\"\n                }}\n                className={\"text_on_category_button\"}>\n                {props.title}\n            </div>\n            {\n                currentCategory == props.index &&\n                <img\n                    className={\"image_on_category_button\"}\n                    src={background}/>\n            }\n\n        </button>\n    }\n    const CategoryButtons = () => {\n\n        return <div id={\"category_main_div\"}>\n            <CategoryButton\n                index={0}\n                onClick={() => {\n                    setCurrentArray(all);\n                    setCurrentCategory(0);\n                }}\n                title={\"ALL\"}/>\n            <CategoryButton\n                index={1}\n                onClick={() => {\n                    setCurrentArray(logo)\n                    setCurrentCategory(1);\n                }}\n                title={\"LOGO\"}/>\n            <CategoryButton\n                index={2}\n                onClick={() => {\n                    setCurrentArray(print);\n                    setCurrentCategory(2);\n                }}\n                title={\"PRINT\"}/>\n            <CategoryButton\n                index={3}\n                onClick={() => {\n                    setCurrentArray(UIUX);\n                    setCurrentCategory(3);\n                }}\n                title={\"UI / UX\"}/>\n        </div>\n    }\n\n    const Info = (props) => {\n        return <div onClick={() => {\n            setShowText(false)\n        }} id={\"info\"} style={{\"--filter\": showText ? \"blur(3px)\" : undefined,}}>\n            <img src={portofolio} id={\"portofolio\"}/>\n            <div id={\"text_on_header\"}>גלול מטה כדי לראות את העבודות</div>\n            <img id={\"down_arrow\"} src={downArrow}/>\n            <CategoryButtons/>\n            <Works/>\n        </div>\n    }\n\n    const Works = () => {\n\n        return <div id={\"work_frame\"}>\n            <div id={\"right_side_work_container\"}>\n                {\n                    currentArray.map((item, index) => {\n                        return index % 2 == 0 && <Work item={item}/>\n                    })\n                }\n            </div>\n\n            <div id={\"left_side_work_container\"}>\n                {\n                    currentArray.map((item, index) => {\n                        return index % 2 == 1 && <Work item={item}/>\n                    })\n                }\n            </div>\n\n        </div>\n    }\n\n    const Work = (props) => {\n        const [showText, setShowText] = useState(false);\n        return <div\n            onMouseOver={() => {\n                setShowText(true)\n            }}\n            onMouseOut={() => {\n                setShowText(false)\n            }}\n            onClick={() => {\n                setPopup({\n                    visible: true,\n                    mockUp: props.item.mockUp\n                })\n            }}\n            className={\"work_main_div\"}>\n            <img\n                style={{\"--opacity\": showText ? 0.5 : 1}}\n                className={\"work_img\"}\n                src={props.item.img}\n            />\n            {\n                showText &&\n                <div\n                    onMouseEnter={() => {\n                        setShowText(true)\n                    }}\n\n                    onMouseOut={() => {\n                        setShowText(true)\n                    }}\n                    className={\"floating_text_on_image\"}>\n                    {props.item.title}\n                </div>\n            }\n\n        </div>\n    }\n    const Header = (props) => {\n        return <div id={\"header\"}>\n            <Info/>\n            <div id={\"drawer_background_line\"}>\n                <DrawerButton\n                    id={\"main_drawer_button_div_close\"}\n                    imageId={\"main_drawer_button_image\"}\n                    onClick={() => {\n                        setShowText(!showText);\n                    }}\n                    image={drawer}\n                />\n            </div>\n            <Drawer/>\n\n        </div>\n    }\n    const [popup, setPopup] = useState({visible: false, mockUp: ''})\n    const [showText, setShowText] = useState(false)\n    return <div id={\"main_div\"}>\n\n        <Popup\n            overlayStyle={{background: 'rgba(255, 255, 255,0.8)'}}\n            open={popup.visible}\n            onClose={() => {\n                setPopup({visible: false, mockUp: ''})\n            }}\n\n\n        >\n\n\n            <TransformWrapper\n                wheel={{wheelEnabled: true}}\n            >\n\n                <TransformComponent transformEnabled={true}>\n                    <img style={{borderRadius: '5vh', width: '100%'}} src={popup.mockUp}/>\n                    <button onClick={() => {\n                        setPopup({visible: false})\n                    }} style={{\n                        fontSize: \"1.5rem\",\n                        borderColor: 'transparent',\n                        outline: 'transparent',\n                        height: '1.5rem',\n                        backgroundColor: 'transparent',\n                        zIndex: 100,\n                        position: 'absolute',\n                        top: \"1rem\",\n                        right: 0,\n                        left: \"1rem\",\n                        bottom: 0\n                    }}>\n                        x\n                    </button>\n                </TransformComponent>\n            </TransformWrapper>\n\n        </Popup>\n        <Header/>\n    </div>\n}\n\nexport default App;\n","/Users/elector/hagar-portfolio/src/index.js",[],{"ruleId":"36","severity":1,"message":"37","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":12},{"ruleId":"36","severity":1,"message":"40","line":41,"column":8,"nodeType":"38","messageId":"39","endLine":41,"endColumn":22},{"ruleId":"36","severity":1,"message":"41","line":42,"column":8,"nodeType":"38","messageId":"39","endLine":42,"endColumn":21},{"ruleId":"36","severity":1,"message":"42","line":43,"column":8,"nodeType":"38","messageId":"39","endLine":43,"endColumn":21},{"ruleId":"36","severity":1,"message":"43","line":53,"column":18,"nodeType":"38","messageId":"39","endLine":53,"endColumn":25},{"ruleId":"36","severity":1,"message":"44","line":106,"column":19,"nodeType":"38","messageId":"39","endLine":106,"endColumn":27},{"ruleId":"36","severity":1,"message":"45","line":124,"column":18,"nodeType":"38","messageId":"39","endLine":124,"endColumn":25},{"ruleId":"36","severity":1,"message":"46","line":156,"column":17,"nodeType":"38","messageId":"39","endLine":156,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":158,"column":25,"nodeType":"49","messageId":"50","endLine":158,"endColumn":27},{"ruleId":"47","severity":1,"message":"48","line":161,"column":26,"nodeType":"49","messageId":"50","endLine":161,"endColumn":28},{"ruleId":"47","severity":1,"message":"48","line":164,"column":25,"nodeType":"49","messageId":"50","endLine":164,"endColumn":27},{"ruleId":"51","severity":1,"message":"52","line":184,"column":13,"nodeType":"53","endLine":184,"endColumn":89},{"ruleId":"54","severity":1,"message":"55","line":238,"column":44,"nodeType":"56","messageId":"57","endLine":238,"endColumn":46},{"ruleId":"54","severity":1,"message":"55","line":244,"column":33,"nodeType":"56","messageId":"57","endLine":244,"endColumn":35},{"ruleId":"51","severity":1,"message":"52","line":245,"column":17,"nodeType":"53","endLine":247,"endColumn":39},{"ruleId":"51","severity":1,"message":"52","line":290,"column":13,"nodeType":"53","endLine":290,"endColumn":54},{"ruleId":"51","severity":1,"message":"52","line":292,"column":13,"nodeType":"53","endLine":292,"endColumn":53},{"ruleId":"54","severity":1,"message":"55","line":304,"column":42,"nodeType":"56","messageId":"57","endLine":304,"endColumn":44},{"ruleId":"54","severity":1,"message":"55","line":312,"column":42,"nodeType":"56","messageId":"57","endLine":312,"endColumn":44},{"ruleId":"51","severity":1,"message":"52","line":336,"column":13,"nodeType":"53","endLine":340,"endColumn":15},{"ruleId":"51","severity":1,"message":"52","line":395,"column":21,"nodeType":"53","endLine":395,"endColumn":91},"no-unused-vars","'Zoom' is defined but never used.","Identifier","unusedVar","'secondCategory' is defined but never used.","'thirdCategory' is defined but never used.","'firstCategory' is defined but never used.","'setUIUX' is assigned a value but never used.","'setPrint' is assigned a value but never used.","'setLogo' is assigned a value but never used.","'setAll' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]